---
- name: Install RKE2 prerequisites
  apt:
    name:
      - iptables
      - python3-kubernetes
      - jq
    state: latest
    cache_valid_time: 86400
  tags:
    - rke2
    - rke2_install
    - rke2_install_packages
    - apt_packages

- name: Create RKE2 config dir
  file:
    path: {{ rke2_config_dir }}
    mode: 0750
    state: directory
  tags:
    - rke2
    - rke2_install
    - rke2_install_config_dir

- name: Create dir for various downloaded files
  file:
    path: {{ downlad_directory }}
    state: directory
  tags:
    - rke2
    - rke2_install
    - rke2_install_root_install_dir

- name: Configure RKE2 tls-san
  ansible.builtin.template:
    src: "config.j2"
    dest: "{{ rke2_config_file }}"
  tags:
    - rke2
    - rke2_install
    - rke2_install_tls-san

- name: Configure PATH to kubectl for all users
  ansible.builtin.copy:
    src: rke2-bash-profile
    dest: "{{ rke2_profile_file }}"
    owner: root
    group: root
    mode: '0755'
  tags:
    - rke2
    - rke2_install
    - rke2_install_kubectl_path

# check_mode return changed in check mode, it was fixed in
# Ansible 2.13.0, https://github.com/ansible/ansible/issues/65687
- name: Download rke2 installer
  ansible.builtin.get_url:
    url: "{{ rke2_installer_url }}"
    dest: "{{ rke2_installer_file }}"
    mode: '0755'
    backup: true
  tags:
    - rke2
    - rke2_install
    - rke2_install_download

# versions of rke2 are listed here:
#    https://github.com/ansible/ansible/issues/65687
# but we are OK with any present
- name: Exec rke2 installer
  ansible.builtin.shell:
    environment:
      INSTALL_RKE2_TYPE: ansible_facts['rke2_cluster_role']
    cmd: "{{ rke2_installer_file }}"
    creates: "{{ rke2_binary_file }}"
  tags:
    - rke2
    - rke2_install
    - rke2_install_install

- name: Enable & start rke service
  ansible.builtin.systemd:
    name: rke2-server.service
    enabled: yes
    masked: no
    state: started
  tags:
    - rke2
    - rke2_install
    - rke2_install_enable_and_start

- name: Fix permisons on {{ rke2_config_file }}
  ansible.builtin.file:
    path: "{{ rke2_config_file }}"
    owner: root
    group: root
    mode: 0600
  tags:
    - rke2
    - rke2_install
    - rke2_install_config_permissions

- name: Update network policy
  kubernetes.core.k8s:
    namespace: default
    state: present
    definition: "{{ lookup('file', 'networkpolicy.yaml') | from_yaml }}"
  tags:
    - rke2
    - rke2_install
    - rke2_install_network-policy

- name: Get members of syadmin group
  set_fact:
    kubernetes_admins: "{{ item.members }}"
  with_items: "{{ user_roles | selectattr('name','equalto','sysadmin') }}"
  tags:
    - rke2
    - rke2_install
    - rke2_install_kube_config
    - rke2_install_kube_config_get_users

- name: Set kube config for admins
  include_tasks: kube_config.yml
  loop: kubernetes_admin
  loop_control:
    loop_var: kubernetes_admin
  tags:
    - rke2
    - rke2_install
    - rke2_install_kube_config
    - rke2_install_kube_config_set

- name: Wait to start of instalation of rke2
  include_tasks: wait2complete.yml
  vars:
    pod_name: "kube-scheduler-{{ ansible_hostname }}"
    namespace: kube-system
  tags:
    - rke2
    - rke2_install
    - kube-system-wait
  when: not ansible_check_mode

- name: Wait to complete instalation of rke2
  include_tasks: wait2complete.yml
  vars:
    namespace: kube-system
  tags:
    - rke2
    - rke2_install
    - kube-system-wait
  when: not ansible_check_mode
